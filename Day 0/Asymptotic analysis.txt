#Asymptotic analysis of the genPrimes function in the GeneratePrimes file

##Big O(worst case analysis)

def genPrimes(n):
    primeNums = []  #1
    if (isinstance(n, int) and  n>1):
        for i in range(2, n + 1):     #n-1
            numIsPrime = True        #1
            for k in range(2, i):    #n-2
                if i % k == 0:        
                    numIsPrime = False   #1
                    break
            if numIsPrime == True:
                primeNums.append(i)     #n
        return primeNums              #1
    else:
        return "Invalid Input"     #1

total run time= 1+(n-1)(1+n-2+1+n)+1+1 = 3+(n-1)(2n) = 3+2n^2-2n
so the worst case time complexity of the program is O(n^2)
